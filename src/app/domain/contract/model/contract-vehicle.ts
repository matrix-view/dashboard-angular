/**
 * miles-contract
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.124.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DynamicAttributeValue } from './dynamic-attribute-value';
import { VehicleDiscount } from './vehicle-discount';
import { MultiCurrencyValue } from './multi-currency-value';
import { VehicleDealer } from './vehicle-dealer';
import { DoubleUnitValue } from './double-unit-value';
import { MultiLanguageValue } from './multi-language-value';
import { DeliveryCostComponent } from './delivery-cost-component';
import { EnumValue } from './enum-value';
import { Model } from './model';
import { VehicleConfiguration } from './vehicle-configuration';


/**
 * The fleet vehicle
 */
export interface ContractVehicle { 
    /**
     * The ID of the vehicle
     */
    vehicleId?: string;
    /**
     * The ID of the catalog vehicle
     */
    catalogVehicleId?: string;
    /**
     * The code of the catalog vehicle
     */
    code?: string;
    /**
     * The path to the image of the car
     */
    imagesPath?: string;
    /**
     * The type of the car
     */
    typeName?: string;
    /**
     * The specification of the tire
     */
    tireSpecification?: string;
    /**
     * The CO2 that the car emits in g/km
     */
    co2Emission?: number;
    /**
     * The power of the car in DIN hp
     */
    dinHp?: number;
    /**
     * Fiscal power is used for taxation
     */
    fiscalPower?: number;
    /**
     * The height of the car in mm
     */
    height?: number;
    /**
     * The length of the car in mm
     */
    length?: number;
    /**
     * The width of the car in mm
     */
    width?: number;
    /**
     * The maximum seating capacity of the car
     */
    maximumSeatingCapacity?: number;
    /**
     * The number of passengers the car can hold
     */
    seatingCapacity?: number;
    /**
     * (NOx) emissions is the nitrogen oxides that a car emits in mg/km 
     */
    noxEmission?: number;
    /**
     * Number of cylinders the car has
     */
    numberOfCylinders?: number;
    /**
     * The width of the wheelbase in mm
     */
    wheelbase?: number;
    /**
     * Acceleration for 0 to 100 km/h or from 0 to 60mp/h
     */
    acceleration?: number;
    /**
     * The engine capacity measured in cubic centimeters
     */
    cc?: number;
    /**
     * Discount percentage
     */
    discountPercentage?: number;
    /**
     * The power of the car in kW
     */
    kw?: number;
    /**
     * The content of the tank
     */
    tankContents?: number;
    /**
     * The torque of the car in Nm
     */
    torque?: number;
    /**
     * Indicates whether the contract vehicle dealer is imposed
     */
    isDealerImposed?: boolean;
    /**
     * Date on which the configuration has been changed
     */
    configurationChangedDate?: string;
    /**
     * Model year
     */
    modelYear?: string;
    /**
     * Requested delivery date
     */
    requestedDeliveryDate?: string;
    /**
     * Requested delivery destination
     */
    requestedDeliveryDestination?: string;
    /**
     * Validation date
     */
    validationDate?: string;
    consumption?: DoubleUnitValue;
    maxLoad?: DoubleUnitValue;
    maxWeight?: DoubleUnitValue;
    netWeight?: DoubleUnitValue;
    trailerLoadBraked?: DoubleUnitValue;
    trailerLoadUnbraked?: DoubleUnitValue;
    bodyStyle?: EnumValue;
    catalogVatCode?: EnumValue;
    drive?: EnumValue;
    emissionNorm?: EnumValue;
    energyLabel?: EnumValue;
    engineFueltype?: EnumValue;
    powertrain?: EnumValue;
    transmission?: EnumValue;
    vehicleCategory?: EnumValue;
    vehicleNature?: EnumValue;
    numberOfDoors?: EnumValue;
    consumerPrice?: MultiCurrencyValue;
    catalogPrice?: MultiCurrencyValue;
    netPrice?: MultiCurrencyValue;
    tax?: MultiCurrencyValue;
    description?: MultiLanguageValue;
    makeName?: MultiLanguageValue;
    modelName?: MultiLanguageValue;
    model?: Model;
    vehicleDealer?: VehicleDealer;
    /**
     * A list of vehicle configurations
     */
    vehicleConfiguration?: Array<VehicleConfiguration>;
    /**
     * A list of vehicle discounts
     */
    vehicleDiscounts?: Array<VehicleDiscount>;
    /**
     * A list of delivery cost components
     */
    deliveryCostComponents?: Array<DeliveryCostComponent>;
    /**
     * A map of dynamic attributes
     */
    dynamicAttributes?: { [key: string]: DynamicAttributeValue; };
}

