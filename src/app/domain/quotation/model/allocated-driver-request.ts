/**
 * miles-quotation
 * This service supports creation, calculation and follow-up of sales quotes (price proposals), typically    involving selection/configuration of a vehicle/asset and a choice of finance or rental product.
 *
 * The version of the OpenAPI document: 4.113.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { InternetReferenceRequest } from './internet-reference-request';
import { DriverAddressRequest } from './driver-address-request';
import { Language } from './language';
import { SimpleEnumValue } from './simple-enum-value';
import { SimpleDynamicAttributeValue } from './simple-dynamic-attribute-value';
import { PhoneNumberRequest } from './phone-number-request';


export interface AllocatedDriverRequest { 
    /**
     * The contact ID of the driver
     */
    driverId?: string;
    /**
     * The first name of the driver
     */
    firstName?: string;
    /**
     * The middle name of the driver
     */
    middleName?: string;
    /**
     * The last name of the driver
     */
    lastName?: string;
    /**
     * The identification of the driver
     */
    identification?: string;
    /**
     * Indicates whether the driver is the main driver on the quote
     */
    isMainDriver?: boolean;
    /**
     * The ID of the customer this driver belongs to
     */
    customerId?: string;
    /**
     * The date of birth of the driver
     */
    dateOfBirth?: string;
    /**
     * The official registration of the driver
     */
    officialRegistration?: string;
    gender?: SimpleEnumValue;
    personTitle?: SimpleEnumValue;
    driverStatus?: SimpleEnumValue;
    /**
     * The address of the driver
     */
    driverAddress?: Array<DriverAddressRequest>;
    /**
     * A list of phone numbers
     */
    phoneNumbers?: Array<PhoneNumberRequest>;
    /**
     * A list of internet references
     */
    internetReferences?: Array<InternetReferenceRequest>;
    language?: Language;
    /**
     * A map of dynamic attributes
     */
    dynamicAttributes?: { [key: string]: SimpleDynamicAttributeValue; };
}

