/**
 * miles-catalog
 * This service may be used to retrieve for    makes, models, catalog vehicles and catalog options. Also generic    options can be retrieved for colors and accessories. Finally, also    vehicle images are available through this service.
 *
 * The version of the OpenAPI document: 2.35.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DynamicAttributeValue } from './dynamic-attribute-value';
import { MultiCurrencyValue } from './multi-currency-value';
import { DoubleUnitValue } from './double-unit-value';
import { MultiLanguageValue } from './multi-language-value';
import { ElectricalVehicleSpecs } from './electrical-vehicle-specs';
import { EnumValue } from './enum-value';
import { Model } from './model';
import { CatalogVehicleReference } from './catalog-vehicle-reference';


export interface CatalogVehicle { 
    /**
     * The ID of the catalog vehicle
     */
    catalogVehicleId?: string;
    /**
     * The acceleration of the catalog vehicle
     */
    acceleration?: number;
    /**
     * The air suspension of the catalog vehicle
     */
    airSuspension?: boolean;
    antiCorrosionWarrantyDistance?: DoubleUnitValue;
    antiCorrosionWarrantyDuration?: DoubleUnitValue;
    assistanceDuration?: DoubleUnitValue;
    /**
     * The start date of which the catalog vehicle is available
     */
    availableFrom?: string;
    /**
     * The end date to which the catalog vehicle is available
     */
    availableTo?: string;
    batteryRange?: DoubleUnitValue;
    /**
     * The bore of the catalog vehicle
     */
    bore?: string;
    catalogPrice?: MultiCurrencyValue;
    /**
     * The cc of the catalog vehicle
     */
    cc?: number;
    /**
     * The co2 emission of the catalog vehicle
     */
    co2Emission?: number;
    /**
     * The code of the catalog vehicle
     */
    code?: string;
    consumerPrice?: MultiCurrencyValue;
    consumption?: DoubleUnitValue;
    defaultDeliveryCost?: MultiCurrencyValue;
    /**
     * The default option discount of the catalog vehicle
     */
    defaultOptionDiscount?: number;
    /**
     * The default discount percentage of the catalog vehicle
     */
    defaultDiscountPercentage?: number;
    defaultDiscountAmount?: MultiCurrencyValue;
    description?: MultiLanguageValue;
    /**
     * The din hp of the catalog vehicle
     */
    dinHp?: number;
    /**
     * The etan code of the catalog vehicle
     */
    etanCode?: string;
    /**
     * The first reference of the catalog vehicle
     */
    reference1?: string;
    /**
     * The second reference of the catalog vehicle
     */
    reference2?: string;
    /**
     * The third reference of the catalog vehicle
     */
    reference3?: string;
    /**
     * If the catalog vehicle has a facelift
     */
    facelift?: boolean;
    /**
     * The fiscal power of the catalog vehicle
     */
    fiscalPower?: number;
    fullServiceWarrantyDistance?: DoubleUnitValue;
    fullServiceWarrantyDuration?: DoubleUnitValue;
    /**
     * The height of the catalog vehicle
     */
    height?: number;
    /**
     * The hydro carbon of the catalog vehicle
     */
    hydroCarbon?: number;
    /**
     * The images path of the catalog vehicle
     */
    imagesPath?: string;
    /**
     * The insurance group of the catalog vehicle
     */
    insuranceGroup?: number;
    /**
     * The interval of the catalog vehicle
     */
    interval?: number;
    /**
     * The introduction date of the catalog vehicle
     */
    introductionDate?: string;
    /**
     * The kw of the catalog vehicle
     */
    kw?: number;
    /**
     * The length of the catalog vehicle
     */
    length?: number;
    /**
     * The number of doors of the catalog vehicle
     */
    linkSystem?: boolean;
    maximumLoad?: DoubleUnitValue;
    /**
     * Use maximumSeatingCapacity Instead
     */
    maximumNumberOfPassengers?: number;
    /**
     * The maximum number of seats of the catalog vehicle
     */
    maximumSeatingCapacity?: number;
    maximumWeight?: DoubleUnitValue;
    /**
     * The model year of the catalog vehicle
     */
    modelYear?: string;
    netWeight?: DoubleUnitValue;
    /**
     * The nox emission of the catalog vehicle
     */
    noxEmission?: number;
    /**
     * The number of axes of the catalog vehicle
     */
    numberOfAxes?: number;
    /**
     * The number of cylinders of the catalog vehicle
     */
    numberOfCylinders?: number;
    /**
     * Use seatingCapacity instead
     */
    numberOfPassengers?: number;
    /**
     * The number of seats of the catalog vehicle
     */
    seatingCapacity?: number;
    /**
     * The number of wheels of the catalog vehicle
     */
    numberOfWheels?: number;
    /**
     * The origin of the catalog vehicle
     */
    origin?: string;
    paintWarrantyDistance?: DoubleUnitValue;
    paintWarrantyDuration?: DoubleUnitValue;
    /**
     * The particle emission of the catalog vehicle
     */
    particleEmission?: number;
    powertrainWarrantyDistance?: DoubleUnitValue;
    powertrainWarrantyDuration?: DoubleUnitValue;
    roadsideAssistanceDistance?: DoubleUnitValue;
    roadsideAssistanceDuration?: DoubleUnitValue;
    /**
     * The stroke of the catalog vehicle
     */
    stroke?: string;
    /**
     * The tank contents of the catalog vehicle
     */
    tankContents?: number;
    tax?: MultiCurrencyValue;
    /**
     * The tax percentage of the catalog vehicle
     */
    taxPercentage?: number;
    /**
     * The tire specification of the catalog vehicle
     */
    tireSpecification?: string;
    /**
     * The torque of the catalog vehicle
     */
    torque?: number;
    trailerLoadBraked?: DoubleUnitValue;
    trailerLoadUnbraked?: DoubleUnitValue;
    /**
     * The trim level of the catalog vehicle
     */
    trimLevel?: string;
    /**
     * The type name of the catalog vehicle
     */
    typeName?: string;
    warrantyDistance?: DoubleUnitValue;
    warrantyDuration?: DoubleUnitValue;
    /**
     * The wheelbase of the catalog vehicle
     */
    wheelbase?: number;
    /**
     * The width of the catalog vehicle
     */
    width?: number;
    bodyStyle?: EnumValue;
    catalogItemType?: EnumValue;
    catalogVatCode?: EnumValue;
    deliveryVatCode?: EnumValue;
    drive?: EnumValue;
    emissionNorm?: EnumValue;
    energyLabel?: EnumValue;
    engineFuelType?: EnumValue;
    engineFuelTypeGroup?: EnumValue;
    licenseType?: EnumValue;
    nature?: EnumValue;
    numberOfDoors?: EnumValue;
    powertrain?: EnumValue;
    transmission?: EnumValue;
    transmissionGroup?: EnumValue;
    vehicleCategory?: EnumValue;
    vehicleStatus?: EnumValue;
    model?: Model;
    electricalVehicleSpecs?: ElectricalVehicleSpecs;
    /**
     * A map of dynamic attributes
     */
    dynamicAttributes?: { [key: string]: DynamicAttributeValue; };
    baseCatalogVehicle?: CatalogVehicleReference;
}

