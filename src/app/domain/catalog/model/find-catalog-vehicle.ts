/**
 * miles-catalog
 * This service may be used to retrieve for    makes, models, catalog vehicles and catalog options. Also generic    options can be retrieved for colors and accessories. Finally, also    vehicle images are available through this service.
 *
 * The version of the OpenAPI document: 2.35.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DynamicAttributeValue } from './dynamic-attribute-value';
import { MultiCurrencyValue } from './multi-currency-value';
import { DoubleUnitValue } from './double-unit-value';
import { FindCatalogVehicleOption } from './find-catalog-vehicle-option';
import { MultiLanguageValue } from './multi-language-value';
import { ElectricalVehicleSpecs } from './electrical-vehicle-specs';
import { EnumValue } from './enum-value';
import { Model } from './model';
import { Country } from './country';


/**
 * The list of catalog vehicles
 */
export interface FindCatalogVehicle { 
    /**
     * Catalog Vehicle ID
     */
    catalogVehicleId?: string;
    /**
     * Car Policy Vehicle ID
     */
    carPolicyVehicleId?: string;
    batteryRange?: DoubleUnitValue;
    catalogPrice?: MultiCurrencyValue;
    /**
     * Engine capacity in cm3
     */
    cc?: number;
    /**
     * Emission of CO2
     */
    co2Emission?: number;
    consumerPrice?: MultiCurrencyValue;
    description?: MultiLanguageValue;
    /**
     * Motive power in DIN hp
     */
    dinHp?: number;
    /**
     * Image path
     */
    imagesPath?: string;
    /**
     * Motive power in KW
     */
    kw?: number;
    /**
     * Maximum number of passengers
     */
    maximumNumberOfPassengers?: number;
    /**
     * Seating capacity
     */
    seatingCapacity?: number;
    /**
     * Maximum seating capacity
     */
    maximumSeatingCapacity?: number;
    /**
     * Type name
     */
    typeName?: string;
    consumption?: DoubleUnitValue;
    startingLeasePrice?: MultiCurrencyValue;
    /**
     * Vehicle code
     */
    code?: string;
    /**
     * Reference 1
     */
    reference1?: string;
    /**
     * Reference 2
     */
    reference2?: string;
    /**
     * Reference 3
     */
    reference3?: string;
    /**
     * Trim level
     */
    trimLevel?: string;
    bodyStyle?: EnumValue;
    vehicleCategory?: EnumValue;
    emissionNorm?: EnumValue;
    energyLabel?: EnumValue;
    engineFuelType?: EnumValue;
    engineFuelTypeGroup?: EnumValue;
    transmission?: EnumValue;
    transmissionGroup?: EnumValue;
    powertrain?: EnumValue;
    vehicleStatus?: EnumValue;
    drive?: EnumValue;
    numberOfDoors?: EnumValue;
    /**
     * Model year
     */
    modelYear?: string;
    model?: Model;
    country?: Country;
    upgradeCost?: MultiCurrencyValue;
    downgradeCompensation?: MultiCurrencyValue;
    /**
     * A list of options that the car has
     */
    catalogOptions?: Array<FindCatalogVehicleOption>;
    electricalVehicleSpecs?: ElectricalVehicleSpecs;
    /**
     * A map of dynamic attributes
     */
    dynamicAttributes?: { [key: string]: DynamicAttributeValue; };
}

